import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { useTodos, useModal } from "../context/";
import { EveryTodo } from "../types/";
import { AddNewTodo } from "../components";
import { Archive, Delete, Edit, FillCheck } from "../icons";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const {
    globalState: { pending },
    deleteExistingTodo,
    transferExistingTodosBetweenPendingAndCompleted,
    transferExistingTodosBetweenArchivesAndPending,
    updateTodoSelected,
  } = useTodos();
  const { openModal } = useModal();
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <AddNewTodo />
        {pending.length === 0 ? (
          <h4>No todos yet</h4>
        ) : (
          <ul>
            {pending.map((everyEl: EveryTodo) => {
              return (
                <div
                  key={everyEl.todo_id}
                  className="flex flex-row gap-x-2 p-2"
                >
                  <li>
                    {everyEl.todo_title}:{everyEl.todo_details}
                  </li>
                  <button
                    onClick={() => {
                      openModal();
                      updateTodoSelected(everyEl);
                    }}
                  >
                    <Edit/>
                  </button>
                  <button
                    onClick={() => {
                      deleteExistingTodo(everyEl);
                    }}
                  >
                    <Delete/>
                  </button>
                  <button
                    onClick={() => {
                      transferExistingTodosBetweenArchivesAndPending(everyEl);
                    }}
                  >
                    <Archive/>
                  </button>
                  <button
                    onClick={() => {
                      transferExistingTodosBetweenPendingAndCompleted(everyEl);
                    }}
                  >
                    <FillCheck/>
                  </button>
                </div>
              );
            })}
          </ul>
        )}
      </div>
    </>
  );
}
